---
import { getCollection, getEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import BackToTop from "@components/back_to_top.astro";
import { getFormattedDate } from "@utils/all";
import { Image } from "astro:assets";
import Giscus from "@components/Giscus.astro";

// Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog", ({ data }) => {
    return !data.draft;
  });
  return Promise.all(
    blogEntries.map(async (entry) => {
      // Load author and lifecycle data
      const author = await getEntry("team", entry.data.author);
      const lifecycle = await getEntry("lifecycle", entry.data.lifecycle);
      const lifecycleSection = await getEntry("section", entry.data.lifecycleSection);
      
      // Create the path: lifecycle/lifecycleSection/filename
      const filename = entry.slug.split('/').pop() || entry.slug;
      const slug = `${entry.data.lifecycle}/${entry.data.lifecycleSection}/${filename}`;
      
      return {
        params: { slug },
        props: { entry, author, lifecycle, lifecycleSection },
      };
    })
  );
}

// Get the entry directly from the prop on render
const { entry, author, lifecycle, lifecycleSection } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title} description={entry.data.snippet} image={entry.data.cover.src.src}>
  <main class="pt-16 pb-8 md:pt-12 md:pb-24">
    <Container>
      <div class="mx-auto max-w-[735px] mt-14">
        <a
          href={`/lifecycle/${lifecycle?.slug}`}
          class="text-blue-400 hover:text-blue-600 uppercase tracking-wider text-sm font-medium transition-colors">
          {lifecycle?.data.title}
        </a>
        <h1
          class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-1 lg:leading-tight">
          {entry.data.title}
        </h1>
        <div class="flex gap-2 mt-3 items-center flex-wrap md:flex-nowrap">
          <a
            href={`/team/${author?.slug}`}
            class="text-gray-400 hover:text-gray-600 transition-colors">
            {author?.data.name}
          </a>
          <span class="text-gray-400">•</span>
          <time
            class="text-gray-400"
            datetime={entry.data.publishDate.toISOString()}>
            {getFormattedDate(entry.data.publishDate)}
          </time>
          <span class="text-gray-400 hidden md:block">•</span>
          <div class="w-full md:w-auto flex flex-wrap gap-3">
            {
              entry.data.tags.map((tag: string) => (
                <span class="text-sm text-gray-500">#{tag}</span>
              ))
            }
          </div>
        </div>
      </div>

      <!-- Blog image if exists -->
      <div class="mx-auto max-w-4xl mt-8">
        <Image
          src={entry.data.cover.src}
          alt={entry.data.cover.alt}
          class="w-full h-auto rounded-lg shadow-lg"
          loading="eager"
        />
      </div>

      <!-- Horizontal gradient separator -->
      <div class="flex justify-center mt-8 mb-6">
        <div
          class="h-1 w-full max-w-md bg-gradient-to-r from-sky-300 to-fuchsia-300 rounded-full">
        </div>
      </div>

      <div class="mx-auto prose prose-lg mt-6">
        <Content />
      </div>
      
      <div class="text-center mt-8">
        <a
          href="/blog"
          class="bg-gray-100 px-5 py-3 rounded-md hover:bg-gray-200 transition"
          >← Back to Blog</a
        >
      </div>

      <Giscus />
    </Container>
    <BackToTop />
  </main>
</Layout>
